@import url('https://fonts.googleapis.com/css2?family=Alegreya+SC:wght@400;500&family=Merriweather:wght@300;400&display=swap');
/** The line above tells the browser to use the CSS given in this link, which in this case is for fonts from an external site. **/

* {
    margin: 0;
    padding: 0;
    border: none;
    box-sizing: border-box;
}
/** The * (asterick) is a universal selector and applies all the settings in the curly braces to all elements on the page.
    In this case all elements on the page have a margin and padding of 0, no border and box-sizing is set to 'border-box'. **/

html {
    background-image: linear-gradient(rgba(255, 0, 0, 0.25),
            rgba(255, 0, 0, 0.25)), url('../img/bg3.jpg');
    background-size: cover;
    background-repeat: no-repeat;
}
/** The html element in the stylesheet means that whatever is in the curly braces applies to the whole HTML.
    In this case the background image has a background image, but has a colour on top of the original colour, and the background image is set to cover the web page and set so that to 'no-repeat' so it does not repeat once the image is rendered on the page, even if it does not fit the page. **/

body {
    font-family: 'Merriweather', sans-serif;
    font-weight: 400;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    overflow-x: hidden;
}
/** The body element is given a font-family of 'Merriweather' and if it is not available with the browser, the default sans serif font is used for the text.
    Font weight is set to 400, display is set to flex so the content in the body element can be freely moved and it is centered on the page using 'justify-content', and the text are set in columns. 
    A minimum height of 100vh is set so that the page can be responsiveon more than one device.
    'overflow-x: hidden' is set to hidden so that content will be hidden if it exceeds over a certain width value. **/

.heading {
    margin: auto;
    width: 100vw;
    font-family: 'Alegreya SC', sans-serif;
    font-size: 50px;
    font-weight: 500;
    text-align: center;
    color: bisque;
    background-color: #150335;
    border-bottom: 2px solid wheat;
    box-shadow: 0 0 5px white;
}
/** The elements in the curly braces above will only affect the HTML tags that have a class name of 'heading'.
    The margin is set to auto which means the content is automatically centered.
    The width is set to 100vw which stands for vertical width.
    The font here is set to primarily 'Alegreya SC' but if the browser does not support the font type, it will use the defauly 'sans-serif' font. 
    Font size is set to 50px. font weight is set to 500 and text is aligned to the center with the colour being set to 'bisque'.
    The background colour is set as well as a colour for the border and box shadow around the box created. **/

.heading a {
    text-decoration: none;
    color: bisque;
}
/** Here the tags with the unique class name of 'heading' anchor elements will have no 'text-decoration' added to them as 'none' is selected for it, and the colour is set to 'bisque'. **/

.heading a:hover {
    text-shadow: 3px 3px red;
}
/** Here the tags with the unique class name of 'heading' anchor elements have a text shadow effect added to them when the user hovers over the element, giving it 3px worth of red around it. **/

.logo {
    height: 40px;
    padding-right: 5px;
}
/** The element(s) with the unique class name 'logo' have the height set to 40px and padding-right set to 5px, meaning that there is 5px space set between the content and its right border. **/

.quiz-container {
    margin: auto;
    max-width: 700px;
    width: 80%;
    background-color: rgba(51, 36, 21, 0.7);
    padding: 25px;
    border-radius: 10px;
    border: 2px solid wheat;
    box-shadow: 0 0 10px 2px wheat;
}
/** The element(s) with the class name 'quiz-container' have the margin set to auto to automatically center the content, have a max width of 700px (in other words the width is limited to 700px) and width set to 80%, so that the content takes up 80% of the screen.
    The background colour is set using rgba to select a colour, there is padding around the content of 25px, the border radius is set to 10px, the border has a value of 2px and is in the form of a solid 'wheat' colour.
    The content also has a 'box-shadow' on it in the colour of 'wheat'. **/

h2 {
    padding-top: 10px;
    text-align: center;
    color: white;
    font-family: 'Merriweather', sans-serif;
}
/** The <h2> tag in the HTML have CSS added to them here, and they have been given 'padding-top' of 10px which adds space around the content and the top of its border by 10px.
    'text-align:center' makes the text get centered of the container. 
    The colour is set to white and the primary font is set to 'Merriweather', but if the browser does not support it 'sans-serif' is set to the secondary choice for the font. **/

h2 em {
    font-weight: bold;
}
/** The <h2> tag has an emphasis element that has its 'font-weight' set to bold to make it stand out. **/

h2 em:hover {
    text-shadow: 3px 3px red;
    color: bisque;
}
/** The <h2> tag has an emphasis element, and with this line above it only affects the <h2> tag when it is hovered over by the user.
    Text will have shadow around it of 3px and the shadow being red, and the colour being set to 'bisque' when being hovered over. **/

p {
    color: white;
    font-size: 18px;
    margin: 10px 0;
    text-align: center;
}
/** The <p> element will have the colour set to white, font-size set to 18px, a margin of 10px to the left and 0px to the right with the text aligned to the center of the container. **/

#question-container {
    margin-bottom: 20px;
}
/** The HTML tags with the id name 'question-container' will have 20px space between the bottom border of an element and the other elements on the page. **/

#question-number {
    text-align: center;
    margin-bottom: 15px;
    color: whitesmoke;
    font-family: 'Merriweather', sans-serif;
    font-size: 20px;
    font-weight: bold;
}
/** The HTML tags with the id name 'question-number' will have the text aligned to the center, 15px of space between the bottom border of an element and the other elements on the page.
    The colour is set to 'whitesmoke', the font is primarily set to 'Merriweather' but if the browser does not support the font type, it will use the default which is 'sans-serif'.
    The size of the font is set to 20px and the font is made bold using 'font-weight'. **/

#question-text {
    font-size: 18px;
    font-weight: bold;
    text-align: center;
    margin-bottom: 30px;
    font-family: 'Merriweather', sans-serif;
    color: white;
}
/** HTML tags with the id name 'question-text' have the size of the font at 18px, the font has thick strokes as the 'font-weight' is bold.
    The text is aligned to the center of the container and there is 30px space between the bottom of an element and the other elements on the page.
    The first choice of font is set to 'Merriweather' but if the browser does not support the font type, the default font 'sans-serif' is used.
    The colour of the text is set to white. **/

#answer-buttons {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 30px;
    font-family: 'Merriweather', sans-serif;
}
/** HTML tags with the id name 'answer-buttons' has the element as a grid container with the display being set to grid.
    'grid-template-columns' states the size and number of columns on a grid. The 'repeat' value creates a pattern of columns, which in this case is 2 times (first value being 2). The 1fr represents the fraction of the space available to it, which it will take up in this case.
    There is 30px worth of space between grid items horizontally and vertically using the element 'grid-gap'.
    The font family is set to 'Merriweather' but if the browser does not support the font, 'sans-serif' is used instead. **/

button {
    height: 40px;
    padding: 10px;
    font-size: 16px;
    background-color: #5adbb5;
    font-weight: bold;
    color: #150335;
    border: 2px solid white;
    border-radius: 5px;
    box-shadow: 0 0 3px white;
}
/** The <button> tag has been given CSS properties here of having its height set to 40px.
    Padding is the space between the elements content and its border, which in this case would be 10px worth of space between the button and its border.
    The font size is set to 16px, the colour has been set with hex a value.
    A white border has been added around the <button> tag and has been given a border radius of 5px with a white shadow around the button. **/

button:hover {
    cursor: pointer;
    box-shadow: 2px 2px white;
    transform: scale(1.1);
}
/** When the user hovers over the <button> element, the cursor (if the website is being viewed on desktop) turns into a pointer instead of a clicker, which tells the user that the button is clickable.
    It has a shadow around the box that appears when the button is hovered over and has the button 'transform', in other words increase by 1.1 when being hovered over. **/

#controls-container {
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
}
/** The HTML tags that have the id name of 'controls-container' have the 'display' set to flex allowing the content to be adjusted, the content being centered by 'justify-content.
    The direction of the flex has been set to columns to make a horizontal column, and the items have been centered using 'align-items: center'. **/

#timer-container {
    display: flex;
    align-items: center;
}
/** The HTML elements with the unique id name 'timer-container' have the 'display' set to flex to allow the container to be moved around the page, and the items are centered using 'align-items: center'. **/

#timer {
    background-color: #150335;
    border: solid 2px wheat;
    margin: 10px;
    padding: 10px;
    font-weight: bold;
    font-size: 20px;
    color: white;
    font-family: 'Merriweather', sans-serif;
}
/** Elements with the id name 'timer' have their background colour changed, have a solid border around the content with the colour 'wheat' and 2px thickness.
    There is 10px worth space around the elements border with the 'margin' CSS property, and 10px worth space around the elements content with the 'padding' CSS property.
    The 'font-weight' is set to bold and the 'font-size' is set to 20px.
    The font colour has been set to white and the font family has two options, the first option being 'Merriweather' and the second being 'sans-serif. If the browser does not support 'Merriweather, the browser will use 'sans-serif' font instead. **/

.correct-answer {
    color: green
}
/** The HTML element that has the unique class name 'correct-answer' allows the element to turn green to show the user they selected the correct answer. **/

.wrong-answer {
    color: red;
}
/** The HTML element that has the unique class name 'wrong-answer' allows the element to turn red to show the user they selected the wrong answer. **/

footer {
    background-color: #150335;
    margin-top: auto;
    padding-bottom: 14px;
    font-family: 'Alegreya SC', sans-serif;
    border-top: 2px solid wheat;
    color: bisque;
    height: auto;
    width: 100vw;
}
/** The <footer> tag has its background colour set with the 'background-color' CSS property.
    'margin-top' is set to auto enabling the footer to be horizontally center the element inside of the container.
    'padding-bottom' is set to 14px to create space around the bottom of the content and its border.
    'border-top' enables there to be a 2px value worth solid 'wheat' coloured border.
    The font colour has been set to white and the font family has two options, the first option being 'Merriweather' and the second being 'sans-serif. If the browser does not support 'Merriweather, the browser will use 'sans-serif' font instead. 
    Colour is et to 'bisque' and the footers 'height' property is set to auto and the width is set to 100 vertical width. **/

.social-networks {
    display: flex;
    text-align: center;
    justify-content: center;
    padding: 0;
    margin: 0 auto;
    max-width: 300px;
}
/** Elements with the 'social-networks' class name have the 'display' set to flex enabling the content to be moved freely.
    The text is aligned to the center of the container and there is 30px space between the bottom of an element and the other elements on the page.
    The content being centered by 'justify-content'.
    'padding' is set to 0 meaning there is no space created around the content and its border.
    'margin' is set to 0 and auto meaning there is no space and it is centered,
    The elements 'max-width' is set to 300px.**/

.social-networks>li {
    display: inline;
    margin-top: 20px;
    width: 20%;
    list-style: none;
}
/** The elements with the class name 'social networks' and come under the list tag have the element fit itself on the same line via 'display: inline'.
    'margin-top' is set to 20px creating space at the top of the element/
    The elements width is set to 20% meaning 20% of its orginal size.
    'list-style' being set to none means that the properties for a list are not in one declaration. **/

.social-networks i {
    color: bisque;
    font-size: 30px;
}
/** The elements with the class name 'social networks' italics colour is set to 'bisque' and the fonts size is set to 30px. **/

.copyright-wrapper {
    font-family: 'Merriweather', sans-serif;
    text-align: center;
    display: inline;
}
/** The elements with the class name 'copyright-wrapper' have the font set to 'Merriweather' but if the browser does not support that font, it will use 'sans-serif' instead. 
    'text-align: center' aligns the content in the center of the container.
    'display: inline' tells the element to fit itself on the same line. **/

.copyright-wrapper p {
    color: bisque;
    font-size: 17px;
}
/** <p> elements with the class name 'copyright-wrapper' have their colour set to 'bisque' and the fonts size is set to 17px. **/

p .copyright {
    margin-right: 5px;
    vertical-align: middle;
}
/** <p> elements and elements with the class name 'copyright' have space between the right edge of an element and its surroundings set to 5px, and 'vertical-align: middle' makes the element align itself with the baseline and half of the x-height of its parent element. **/

.popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 20px;
    background-color: #150335;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    z-index: 1;
}
/** Elements with the class name 'popup' have the display set to none.
    Position is set to fixed meaning it can not be moved around freely or changed unless given a different value.
    The 'top' property is set to 50% meaning it is vertically positioned 50% to the top.
    The 'left' property is set to 50% meaning it is horizontally positioned to the left. 
    The 'transform' property in this case translates the element horizontally and vertically allowing them to be centered alongside with the help of the property 'position: fixed'.
    There is space around the content and its border of a value of 20px.
    Background colour is set using hex code colour.
    There is a box shadow layer added with rgba colour code.
    'z-index' is set to 1 allowing this element to be positioned above an element with a 'z-index' value of 0 or no 'z-index'. In this case it will be placed on top of other content that do not have the 'z-index' property set to 1. **/

.popup-content {
    text-align: center;
    padding: 20px;
}
/** Elements with the class name 'popup-content' have their text aligned to the center of their container with the 'text-align: center' property, and have space around the content and its border of 20px with the 'padding' CSS property. **/

.popup-content p {
    font-size: 12px;
    color: white;
} 
/** <p> elements with the container that have the class name 'popup-container' have the size of their fonts set to 12px with the 'font-size' property.
    The texts colour is set to white with the 'color' property. **/ 

.popup-content img {
    max-width: 60%;
    height: auto;
    margin-bottom: 10px;
}
/** <img> elements within containers that have the class name 'popup-content' have the images 'max-width' set to 60%, to take up 60% of the screen size.
   The 'height' property is set to auto meaning the elements height is adjusted based on the size of its content automatically.
   'margin-bottom' is set to 10px meaning there is 10px worth space around an elements border on the bottom side of the element. **/
  
.close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 30px;
    color: white;
    cursor: pointer;
}
/** HTML elements with the class name 'close' have an absolute position which means the element is repositioned and pulled out of the page flow and sit in front of the elements that come after it.
    The 'top' property pushes the element 10px (pixels) away from the top of the elements padding box.
    The 'right' property pushes the element 15px (pixels) aways from the right of the elements padding box.
    The fonts are set to a size of 30px with the 'font-size' property.
    The font colour is set to white with the 'color' property.
    The cursor is stated to be changed to a pointer when the element is clicked or hovered on by the user. **/

/** Media Query for viewing the quiz website on tablet screens. **/  
@media screen and (min-width: 768px) and (max-width: 1024px) {
/* @media screen is used to change the content on the screen of a web page depending on the device width. An example is with this website the content will be bigger on desktop, but smaller on a mobile phone or tablet.
   So that they don't look completely different, @media screen enables the users to be able to have the right sizes and shapes showing via having different values for the element, so when it goes from a desktop view to mobile view the only thing changing will be the screen size and not the content.
   768px (pixels) is chosen as the minimum width for the device because the smallest tablet screen size in terms of width from the devices on the Google Inspect tool is 768px (pixels). **/   

   body {
        font-size: 16px;
}
/** The content within the body element have been given a font size of 16px as the screen is smaller than a desktop screen. **/

.quiz-container {
        max-width: 90%;
        margin: auto;
}
/** The elements with the class name 'quiz-container' has its width increased to 90% so it fits the size of the device (in this case the tablet) and 'margin' is set to auto so it gets centered horizontally to its parent element. **/

button:hover {
        cursor: pointer;
        box-shadow: 2px 2px white;
        transform: scale(1);
}
/** When the elements with the class name 'button' are hovered over, there is a shadow in the outline of a box around it with a white line.
    The cursor changes to a pointer to let the user(s) know the button is clickable.
    The 'transform' property enables the button to increase by 1 when being hovered over.**/

#answer-buttons {
        display: grid;
        grid-template-columns: repeat(1, 1fr);
        grid-gap: 20px;
}
/** HTML tags with the id name 'answer-buttons' has the element as a grid container with the display being set to grid.
    The 'grid-template-columns' property states the size and number of columns on a grid. The 'repeat' value creates a pattern of columns, which in this case is 1 time (first value being 1). The 1fr represents the fraction of the space available to it, which it will take up in this case.
    There is 20px worth of space between grid items horizontally and vertically using the element 'grid-gap'. **/

/** Style for the pop-up container **/
.popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 100%;
    transform: translate(-50%, -50%);
    padding: 20px;
    background-color: #150335;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    z-index: 1;
}
/** Elements with the class name 'popup' have the display set to none.
    Position is set to fixed meaning it can not be moved around freely or changed unless given a different value.
    The 'top' property is set to 50% meaning it is vertically positioned 50% to the top.
    The 'left' property is set to 100% meaning it is horizontally positioned to the left. 
    The 'transform' property in this case translates the element horizontally and vertically allowing them to be centered alongside with the help of the property 'position: fixed'.
    There is space around the content and its border of a value of 20px.
    Background colour is set using hex code colour.
    There is a box shadow layer added with rgba colour code.
    'z-index' is set to 1 allowing this element to be positioned above an element with a 'z-index' value of 0 or no 'z-index'. In this case it will be placed on top of other content that do not have the 'z-index' property set to 1. **/


  /* Style for the pop-up content */
.popup-content {
    text-align: center;
    padding: 20px;
}
/** Elements with the class name 'popup-content' have their text aligned to the center of their container with the 'text-align: center' property, and have space around the content and its border of 20px with the 'padding' CSS property. **/

/* Style for the text inside the pop-up */
  .popup-content p {
    font-size: 10px;
    color: white;
}  
/** <p> elements with the container that have the class name 'popup-container' have the size of their fonts set to 10px with the 'font-size' property.
    The texts colour is set to white with the 'color' property. **/ 

/* Style for the image inside the pop-up */
.popup-content img {
    max-width: 60%;
    height: auto;
    margin-bottom: 10px;
}
/** <img> elements within containers that have the class name 'popup-content' have the images 'max-width' set to 60%, to take up 60% of the screen size.
   The 'height' property is set to auto meaning the elements height is adjusted based on the size of its content automatically.
   'margin-bottom' is set to 10px meaning there is 10px worth space around an elements border on the bottom side of the element. **/
  
/* Style for the close button */
.close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 30px;
    cursor: pointer;
}
/** HTML elements with the class name 'close' have an absolute position which means the element is repositioned and pulled out of the page flow and sit in front of the elements that come after it.
    The 'top' property pushes the element 10px (pixels) away from the top of the elements padding box.
    The 'right' property pushes the element 15px (pixels) aways from the right of the elements padding box.
    The fonts are set to a size of 30px with the 'font-size' property.
    The cursor is stated to be changed to a pointer when the element is clicked or hovered on by the user. **/
}  

/** Media Query for viewing the quiz website on mobile phones with a smaller screen than a tablet. **/
@media screen and (max-width: 480px) {
/* @media screen is used to change the content on the screen of a web page depending on the device width. An example is with this website the content will be bigger on desktop, but smaller on a mobile phone or tablet.
   So that they don't look completely different, @media screen enables the users to be able to have the right sizes and shapes showing via having different values for the element, so when it goes from a desktop view to mobile view the only thing changing will be the screen size and not the content.
   480px (pixels) is chosen as the minimum width for the device because the smallest mobile phone screen size in terms of width from the devices on the Google Inspect tool is 480px (pixels). */

.heading {
    font-size: 36px;
}
/** The element with the class name 'heading' has the 'font-size' property increasing the text by 36px so the text is visible to the user(s) on the smaller screen. **/

.logo {
    height: 31px;
    padding-right: 5px;
}
/** Elements with the 'height' class name have the height determined to be 31px (pixels).
    The element also has the 'padding-right' property set to 5px meaning there is space of 5px that gets added around the right side of the elements content. **/

.quiz-container {
    margin: auto;
    max-width: 100%;
    padding: 20px;
}
/** Elements with the class name 'quiz-container' have their margin set to auto to horizontally center the element. 
    The elements maximum width is set to 100% by the 'max-width' property so it takes the full width size of the screen.
    The element uses the 'padding' property and creates 20px worth space around the content and its border. **/

#answer-buttons {
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 13px;
}
/** HTML tags with the id name 'answer-buttons' has the 'grid-template-columns' property, which states the size and number of columns on a grid.
    There is 13px worth of space between grid items horizontally and vertically using the element 'grid-gap'. **/

/** Style for the pop-up container **/
.popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 100%;
    transform: translate(-50%, -50%);
    padding: 20px;
    background-color: #150335;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    z-index: 1;
}
/** Elements with the class name 'popup' have the display set to none.
    Position is set to fixed meaning it can not be moved around freely or changed unless given a different value.
    The 'top' property is set to 50% meaning it is vertically positioned 50% to the top.
    The 'left' property is set to 100% meaning it is horizontally positioned to the left. 
    The 'transform' property in this case translates the element horizontally and vertically allowing them to be centered alongside with the help of the property 'position: fixed'.
    There is space around the content and its border of a value of 20px.
    Background colour is set using hex code colour.
    There is a box shadow layer added with rgba colour code.
    'z-index' is set to 1 allowing this element to be positioned above an element with a 'z-index' value of 0 or no 'z-index'. In this case it will be placed on top of other content that do not have the 'z-index' property set to 1. **/

/** Style for the pop-up content **/
.popup-content {
    text-align: center;
    padding: 20px;
}
/** Elements with the class name 'popup-content' have their text aligned to the center of their container with the 'text-align: center' property, and have space around the content and its border of 20px with the 'padding' CSS property. **/

/** Style for the text inside the pop-up **/
  .popup-content p {
    font-size: 11.5px;
    color: white;
}  
/** <p> elements with the container that have the class name 'popup-container' have the size of their fonts set to 11.5px (pixels) with the 'font-size' property.
    The texts colour is set to white with the 'color' property. **/ 


/** Style for the image inside the pop-up **/
.popup-content img {
    max-width: 60%;
    height: auto;
    margin-bottom: 10px;
}
/** <img> elements within containers that have the class name 'popup-content' have the images 'max-width' set to 60%, to take up 60% of the screen size.
   The 'height' property is set to auto meaning the elements height is adjusted based on the size of its content automatically.
   'margin-bottom' is set to 10px meaning there is 10px worth space around an elements border on the bottom side of the element. **/

  
/** Style for the close button **/
.close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 30px;
    cursor: pointer;
}
/** HTML elements with the class name 'close' have an absolute position which means the element is repositioned and pulled out of the page flow and sit in front of the elements that come after it.
    The 'top' property pushes the element 10px (pixels) away from the top of the elements padding box.
    The 'right' property pushes the element 15px (pixels) aways from the right of the elements padding box.
    The size of the font is 30px via the 'font-size' property.
    The cursor is stated to be changed to a pointer when the element is clicked or hovered on by the user. **/
}

/** Media Query for viewing the quiz website on mobile phones with a small screen. **/
@media screen and (max-width: 380px) {
.heading {
    font-size: 34px;
}
/** The element with the class name 'heading' has the 'font-size' property increasing the text by 34px so the text is visible to the user(s) on the smaller screen. **/

.logo {
    height: 29px;
    padding-right: 5px;
}
/** Elements with the 'height' class name have the height determined to be 29px (pixels).
    The element also has the 'padding-right' property set to 5px meaning there is space of 5px that gets added around the right side of the elements content. **/

.quiz-container {
    margin: auto;
    max-width: 100%;
    padding: 15px;
}
/** Elements with the class name 'quiz-container' have their 'margin' property set to auto to horizontally center the element. 
    The elements maximum width is set to 100% by the 'max-width' property so it takes the full width size of the screen.
    The element uses the 'padding' property and creates 15px worth space around the content and its border. **/

#answer-buttons {
    grid-template-columns: repeat(1, 1fr);
    grid-gap: 13px;
}
/** HTML tags with the id name 'answer-buttons' has the 'grid-template-columns' property, which states the size and number of columns on a grid, in this case the 'grid-template-columns' property states the size and number of columns on a grid. The 'repeat' value creates a pattern of columns, which in this case is 1 time (first value being 1). The 1fr represents the fraction of the space available to it, which it will take up in this case.
    There is 13px worth of space between grid items horizontally and vertically using the element 'grid-gap'. **/

/* Style for the pop-up container */
.popup {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 100%;
    transform: translate(-50%, -50%);
    padding: 20px;
    background-color: #150335;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
    z-index: 1;
}
/** Elements with the class name 'popup' have the display set to none.
    Position is set to fixed meaning it can not be moved around freely or changed unless given a different value.
    The 'top' property is set to 50% meaning it is vertically positioned 50% to the top.
    The 'left' property is set to 100% meaning it is horizontally positioned to the left. 
    The 'transform' property in this case translates the element horizontally and vertically allowing them to be centered alongside with the help of the property 'position: fixed'.
    There is space around the content and its border of a value of 20px.
    Background colour is set using hex code colour.
    There is a box shadow layer added with rgba colour code.
    'z-index' is set to 1 allowing this element to be positioned above an element with a 'z-index' value of 0 or no 'z-index'. In this case it will be placed on top of other content that do not have the 'z-index' property set to 1. **/

/* Style for the pop-up content */
.popup-content {
    text-align: center;
    padding: 20px;
}
/** Elements with the class name 'popup-content' have their text aligned to the center of their container with the 'text-align: center' property, and have space around the content and its border of 20px with the 'padding' CSS property. **/

/* Style for the text inside the pop-up */
.popup-content p {
    font-size: 11.5px;
    color: white;
}  
/** <p> elements with the container that have the class name 'popup-container' have the size of their fonts set to 11.5px (pixels) with the 'font-size' property.
    The texts colour is set to white with the 'color' property. **/ 

/* Style for the image inside the pop-up */
.popup-content img {
    max-width: 60%;
    height: auto;
    margin-bottom: 10px;
}
/** <img> elements within containers that have the class name 'popup-content' have the images 'max-width' set to 60%, to take up 60% of the screen size.
   The 'height' property is set to auto meaning the elements height is adjusted based on the size of its content automatically.
   The 'margin-bottom' property is set to 10px, meaning there is 10px worth space around an elements border on the bottom side of the element. **/
  
/* Style for the close button */
.close {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 20px;
    cursor: pointer;
}
/** HTML elements with the class name 'close' have an absolute position which means the element is repositioned and pulled out of the page flow and sit in front of the elements that come after it.
    The 'top' property pushes the element 10px (pixels) away from the top of the elements padding box.
    The 'right' property pushes the element 15px (pixels) aways from the right of the elements padding box.
    The size of the font is 20px via the 'font-size' property.
    The cursor is stated to be changed to a pointer when the element is clicked or hovered on by the user. **/
}